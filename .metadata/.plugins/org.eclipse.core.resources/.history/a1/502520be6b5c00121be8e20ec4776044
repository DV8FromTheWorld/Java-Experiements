package dv8.output;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class ParseJava {
	private static String strJava;
	public static void parseTheJava(){
		int iTier, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, iOutput, iAmount;
		String tier, slot1, slot2, slot3, slot4, slot5, slot6, slot7, slot8, slot9, slot10, output, outputAmount;
		String[] recipe = new String[13];
		BufferedReader br = null;
		try{
			br = new BufferedReader(new FileReader(workingDir.getDir() + "\\files\\parseMe.txt"));
				while((strJava = br.readLine()) != null){
					strJava.trim();
					tier = strJava.substring((iTier=strJava.indexOf("(")+1), (i1=strJava.indexOf(",", iTier)));
					recipe[1] = strJava.substring(i1+2, (i2=getProperIndex(i1)));
					slot2 = strJava.substring(i2+2, (i3=getProperIndex(i2)));
					slot3 = strJava.substring(i3+2, (i4=getProperIndex(i3)));
					slot4 = strJava.substring(i4+2, (i5=getProperIndex(i4)));
					slot5 = strJava.substring(i5+2, (i6=getProperIndex(i5)));
					slot6 = strJava.substring(i6+2, (i7=getProperIndex(i6)));
					slot7 = strJava.substring(i7+2, (i8=getProperIndex(i7)));
					slot8 = strJava.substring(i8+2, (i9=getProperIndex(i8)));
					slot9 = strJava.substring(i9+2, (i10=getProperIndex(i9)));
					System.out.println(tier);
					System.out.println(recipe[1]);
					System.out.println(slot2);
					System.out.println(slot3);
					System.out.println(slot4);
					System.out.println(slot5);
					System.out.println(slot6);
				}
			br.close();
		}catch(IOException e){
			e.printStackTrace();
		}
	}
	public static int getProperIndex(int startIndex){
		int failSafeIndex = strJava.indexOf("(),", startIndex);
		int index1 = strJava.indexOf("),", startIndex);
		int index2 = strJava.indexOf("l,", startIndex);
		if(failSafeIndex != -1){
			if(failSafeIndex < index1){
				index1 = strJava.indexOf("),", failSafeIndex + 2);
			}
		}		
		if(index1 == -1){
			return index2 + 1;
		}else if(index2 == -1){
			return index1 + 1;
		}else if(index1 < index2){
			return index1 + 1;
		}else{
			return index2 + 1;
		}
	}	
}
